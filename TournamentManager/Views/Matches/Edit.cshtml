@model TournamentManager.Models.Match

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Match</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="ScheduledTime" class="control-label"></label>
                <input asp-for="ScheduledTime" class="form-control" />
                <span asp-validation-for="ScheduledTime" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TeamAName" class="control-label">Team A</label>
                <input type="text" id="TeamAName" class="form-control" value="@Model.TeamAName" readonly />
                <input type="hidden" asp-for="TeamAName" id="hiddenTeamAName" />
            </div>
            <div class="form-group">
                <label asp-for="TeamBName" class="control-label">Team B</label>
                <input type="text" id="teamBName" class="form-control" value="@Model.TeamBName" readonly />
                <input type="hidden" asp-for="TeamBName" id="hiddenTeamBName" />
            </div>
            <div class="form-group">
                <label asp-for="Round" class="control-label">Round</label>
                <input type="text" asp-for="Round" id="Round" class="form-control" readonly />
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsCompleted" /> @Html.DisplayNameFor(model => model.IsCompleted)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="WinnerId" class="control-label">Winner</label>
                <select id="winnerId" class="form-control" asp-for="WinnerId" asp-items="ViewBag.WinnerId">
                    <option value="">Please select</option>
                </select>
                <span asp-validation-for="WinnerId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Score" class="control-label"></label>
                <input asp-for="Score" class="form-control" />
                <span asp-validation-for="Score" class="text-danger"></span>
            </div>
            <!-- Add hidden fields to hold the selected TeamAId and TeamBId values -->
            <input type="hidden" asp-for="TeamAId" id="hiddenTeamAId" />
            <input type="hidden" asp-for="TeamBId" id="hiddenTeamBId" />
            <!-- Add hidden field to hold the selected WinnerName -->
            <input type="hidden" asp-for="WinnerName" id="hiddenWinnerName" />
            <input type="hidden" asp-for="TournamentId" value="@Model.TournamentId" />
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
    <script>
        // Attach a change event handler to the WinnerId select element
        $("#winnerId").change(function () {
            var selectedWinnerId = $(this).val();
            var winnerName = $("#winnerId option:selected").text();

            // Set the value of the hiddenWinnerName field to the selected winner's name
            $("#hiddenWinnerName").val(winnerName);
        });
    </script>
}


